(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.1.5"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.1.5"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.1.5"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.1.5"]&&_()}catch(e){}}},t={};function s(a){var r=t[a];if(void 0!==r)return r.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,s),n.exports}(()=>{s(913);class e extends Error{constructor(e,t){super(((e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s})(e,t)),this.name=e,this.details=t}}const t={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},a=e=>[t.prefix,e,t.suffix].filter((e=>e&&e.length>0)).join("-"),r=e=>e||a(t.precache);function n(e,t){const s=t();return e.waitUntil(s),s}function i(t){if(!t)throw new e("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:s,url:a}=t;if(!a)throw new e("add-to-cache-list-unexpected-type",{entry:t});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const r=new URL(a,location.href),n=new URL(a,location.href);return r.searchParams.set("__WB_REVISION__",s),{cacheKey:r.href,url:n.href}}s(977);class c{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class o{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=t&&t.cacheKey||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s):e},this._precacheController=e}}let h;function l(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class u{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const d=new Set;function f(e){return"string"==typeof e?new Request(e):e}s(873);class p{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new u,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(t){const{event:s}=this;let a=f(t);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const r=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(t){throw new e("plugin-error-request-will-fetch",{thrownError:t})}const n=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:n,response:e});return e}catch(e){throw r&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:r.clone(),request:n.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=f(e);let s;const{cacheName:a,matchOptions:r}=this._strategy,n=await this.getCacheKey(t,"read"),i={...r,cacheName:a};s=await caches.match(n,i);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:r,cachedResponse:s,request:n,event:this.event})||void 0;return s}async cachePut(t,s){const a=f(t);await(0,new Promise((e=>setTimeout(e,0))));const r=await this.getCacheKey(a,"write");if(!s)throw new e("cache-put-with-no-response",{url:(n=r.url,new URL(String(n),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var n;const i=await this._ensureResponseSafeToCache(s);if(!i)return!1;const{cacheName:c,matchOptions:o}=this._strategy,h=await self.caches.open(c),u=this.hasCallback("cacheDidUpdate"),p=u?await async function(e,t,s,a){const r=l(t.url,s);if(t.url===r)return e.match(t,a);const n={...a,ignoreSearch:!0},i=await e.keys(t,n);for(const t of i)if(r===l(t.url,s))return e.match(t,a)}(h,r.clone(),["__WB_REVISION__"],o):null;try{await h.put(r,u?i.clone():i)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of d)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:c,oldResponse:p,newResponse:i.clone(),request:r,event:this.event});return!0}async getCacheKey(e,t){if(!this._cacheKeys[t]){let s=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))s=f(await e({mode:t,request:s,event:this.event,params:this.params}));this._cacheKeys[t]=s}return this._cacheKeys[t]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const r={...a,state:s};return t[e](r)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve()}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class y extends class{constructor(e={}){this.cacheName=e.cacheName||a(t.runtime),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,r=new p(this,{event:t,request:s,params:a}),n=this._getResponse(r,s,t);return[n,this._awaitComplete(n,r,s,t)]}async _getResponse(t,s,a){let r;await t.runCallbacks("handlerWillStart",{event:a,request:s});try{if(r=await this._handle(s,t),!r||"error"===r.type)throw new e("no-response",{url:s.url})}catch(e){for(const n of t.iterateCallbacks("handlerDidError"))if(r=await n({error:e,event:a,request:s}),r)break;if(!r)throw e}for(const e of t.iterateCallbacks("handlerWillRespond"))r=await e({event:a,request:s,response:r});return r}async _awaitComplete(e,t,s,a){let r,n;try{r=await e}catch(n){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:r}),await t.doneWaiting()}catch(e){n=e}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:r,error:n}),t.destroy(),n)throw n}}{constructor(e={}){e.cacheName=r(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(y.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){return await t.cacheMatch(e)||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(t,s){let a;if(!this._fallbackToNetwork)throw new e("missing-precache-entry",{cacheName:this.cacheName,url:t.url});return a=await s.fetch(t),a}async _handleInstall(t,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(t);if(!await s.cachePut(t,a.clone()))throw new e("bad-precaching-response",{url:t.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==y.copyRedirectedCacheableResponsesPlugin&&(a===y.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(y.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}y.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},y.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await async function(t,s){let a=null;if(t.url&&(a=new URL(t.url).origin),a!==self.location.origin)throw new e("cross-origin-copy-response",{origin:a});const r=t.clone(),n={headers:new Headers(r.headers),status:r.status,statusText:r.statusText},i=s?s(n):n,c=function(){if(void 0===h){const e=new Response("");if("body"in e)try{new Response(e.body),h=!0}catch(e){h=!1}h=!1}return h}()?r.body:await r.blob();return new Response(c,i)}(t):t};class w{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new y({cacheName:r(e),plugins:[...t,new o({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(t){const s=[];for(const a of t){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:t,url:r}=i(a),n="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(r)&&this._urlsToCacheKeys.get(r)!==t)throw new e("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(r),secondEntry:t});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(t)&&this._cacheKeysToIntegrities.get(t)!==a.integrity)throw new e("add-to-cache-list-conflicting-integrities",{url:r});this._cacheKeysToIntegrities.set(t,a.integrity)}if(this._urlsToCacheKeys.set(r,t),this._urlsToCacheModes.set(r,n),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return n(e,(async()=>{const t=new c;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),r=this._urlsToCacheModes.get(t),n=new Request(t,{integrity:a,cache:r,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:n,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return n(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const r of t)s.has(r.url)||(await e.delete(r),a.push(r.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(t){const s=this.getCacheKeyForURL(t);if(!s)throw new e("non-precached-url",{url:t});return e=>(e.request=new Request(t),e.params={cacheKey:s,...e.params},this.strategy.handle(e))}}let g;const m=()=>(g||(g=new w),g);s(80);const _=e=>e&&"object"==typeof e?e:{handle:e};class R{constructor(e,t,s="GET"){this.handler=_(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=_(e)}}class v extends R{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class C{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const a=s.origin===location.origin,{params:r,route:n}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s});let i=n&&n.handler;const c=e.method;if(!i&&this._defaultHandlerMap.has(c)&&(i=this._defaultHandlerMap.get(c)),!i)return;let o;try{o=i.handle({url:s,request:e,event:t,params:r})}catch(e){o=Promise.reject(e)}const h=n&&n.catchHandler;return o instanceof Promise&&(this._catchHandler||h)&&(o=o.catch((async a=>{if(h)try{return await h.handle({url:s,request:e,event:t,params:r})}catch(e){a=e}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw a}))),o}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){const r=this._routes.get(s.method)||[];for(const n of r){let r;const i=n.match({url:e,sameOrigin:t,request:s,event:a});if(i)return r=i,(Array.isArray(i)&&0===i.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(r=void 0),{route:n,params:r}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,_(e))}setCatchHandler(e){this._catchHandler=_(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(t){if(!this._routes.has(t.method))throw new e("unregister-route-but-not-found-with-method",{method:t.method});const s=this._routes.get(t.method).indexOf(t);if(!(s>-1))throw new e("unregister-route-route-not-registered");this._routes.get(t.method).splice(s,1)}}let b;class U extends R{constructor(e,t){super((({request:s})=>{const a=e.getURLsToCacheKeys();for(const e of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:a=!0,urlManipulation:r}={}){const n=new URL(e,location.href);n.hash="",yield n.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(n,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(a){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:n});for(const t of e)yield t.href}}(s.url,t)){const t=a.get(e);if(t)return{cacheKey:t}}}),e.strategy)}}var L;L=[{'revision':'e60fb79541f3e0d37406b8de331a5b3f','url':'apple-touch-icon.png'},{'revision':'a1c6e447d67e3f3629b29c874cde7b6e','url':'assets/audio/Amb_DripAmogus.mp3'},{'revision':'135cdb6f5a44ec5463d6355d2fbe48f0','url':'assets/audio/Amb_Dungeon.mp3'},{'revision':'7ca8e2740576092c7b165d1e44fb8c38','url':'assets/audio/Amb_Music.mp3'},{'revision':'a9a866b64a2c2bcfb1c446acea4af94b','url':'assets/audio/Char_Step_01.mp3'},{'revision':'256b10b768bf511650a0efc4a52aa8b9','url':'assets/audio/Char_Step_02.mp3'},{'revision':'f385920acef0b70a706638f739aff65f','url':'assets/audio/Char_Step_03.mp3'},{'revision':'da48f53fbf265903cc41231dc4a3d970','url':'assets/audio/Char_Step_04.mp3'},{'revision':'44b405a6bb37d0a7171788f90e39d4f7','url':'assets/audio/Nar_Static.mp3'},{'revision':'e5ae715846a2e1dcd801fe276c2841f3','url':'assets/audio/UI_BoxAppear.mp3'},{'revision':'f116953d853c91e94a8147a5e638ad29','url':'assets/audio/UI_PickUp.mp3'},{'revision':'6a9fbec954ea313ae201226e3349e452','url':'assets/audio/UI_PutDown.mp3'},{'revision':'94116aba786ec7a5bf1496ebac2fd5e6','url':'assets/audio/V_01.mp3'},{'revision':'4506a189e1803bf6f2863b8d2fcc5d0d','url':'assets/audio/V_02_End.mp3'},{'revision':'be81952e0695c612be01759e25ae4bcb','url':'assets/audio/V_02_Start.mp3'},{'revision':'42e0093cd52c3cb6e2c58a3c1c607fcd','url':'assets/audio/V_03.mp3'},{'revision':'4fd631717d61f299d795a165b7059723','url':'assets/audio/V_04_End.mp3'},{'revision':'e7f9775d2ef08700d17709373bdab03e','url':'assets/audio/V_04_Start.mp3'},{'revision':'b300d255bc210580c7c1c322a9b0a1f3','url':'assets/audio/V_Not.mp3'},{'revision':'3f0f1802550efef2948b10e59d34a881','url':'assets/fonts/Suplexmentary.ttf'},{'revision':'6dda70d37fe7c4bb88dc2edac9ebefb7','url':'assets/images/balloon_01.png'},{'revision':'47689e3be9874e55085f223001e40e79','url':'assets/images/balloon_02.png'},{'revision':'85e9c07149d944f48361a8c3cefb554a','url':'assets/images/bridge.png'},{'revision':'9aa9eacf83c78ed3abbe3aaacac5b385','url':'assets/images/flower_alive.png'},{'revision':'f6dc2396c1390cd54645dbf46feef623','url':'assets/images/flower_dead.png'},{'revision':'69711301923d8d99bd61ba4a4a816382','url':'assets/images/halfdoorlock.png'},{'revision':'3b1aeef1e8c35bf3f6a30338fd6428a4','url':'assets/images/halfdooropen.png'},{'revision':'e5a875fe1dd6851eefc7f3b6e5dd6915','url':'assets/images/horizontal.png'},{'revision':'5191e5e11ab2c558994ec58fa9899a1f','url':'assets/images/horizontal_end.png'},{'revision':'774111b5406043299e318c7cf7ab8512','url':'assets/images/monster/monster_angry01.png'},{'revision':'6e220eddc0c42ef5822fc787544ac209','url':'assets/images/monster/monster_angry02.png'},{'revision':'2741bda997f6efdf3b10be463faa6a5e','url':'assets/images/monster/monster_scared01.png'},{'revision':'da2ae3819fe1e8b49773be813a1afbc2','url':'assets/images/monster/monster_scared02.png'},{'revision':'dbf2375ea79cc9828470cfd2e083cfa4','url':'assets/images/monster/monster_sleeping01.png'},{'revision':'6bc5a69ee30b90c83e813a994a612076','url':'assets/images/monster/monster_sleeping02.png'},{'revision':'40287d9177e6e6bd54555ecc568619ca','url':'assets/images/monster/monster_standing01.png'},{'revision':'6b67247deaa5b1f91bc6b233dcd68c7e','url':'assets/images/monster/monster_standing02.png'},{'revision':'ab27f7ec21c8a4bbdba55f0824e0e741','url':'assets/images/player/angry_01.png'},{'revision':'675b83d8d498634ebfe7aa20a65e5756','url':'assets/images/player/angry_02.png'},{'revision':'37c294e337698e3caa0c1459bdf71fc7','url':'assets/images/player/sleep_01.png'},{'revision':'065b5c1eeaae4933a11245793fe1a16c','url':'assets/images/player/sleep_02.png'},{'revision':'307fa54041d1960e5ae7f89765a2204e','url':'assets/images/player/standing_01.png'},{'revision':'b851f50e1fad189f21f3a2f5e951f9dc','url':'assets/images/player/standing_02.png'},{'revision':'be35349c18f93a72bbfbb49994f90fd4','url':'assets/images/player/walking_01.png'},{'revision':'233267b21913e05d19de147850d29087','url':'assets/images/player/walking_02.png'},{'revision':'6de7acaf99969b859802e0a80fc70fb7','url':'assets/images/plus_shape.png'},{'revision':'42e2133c8a268c3f001e6d7db4a52366','url':'assets/images/pointer.png'},{'revision':'68ca3a6e9c84adf62a65c4b208620dcc','url':'assets/images/side_down_connect.png'},{'revision':'1d3296332b2d46136ad42ba97db88792','url':'assets/images/spikes.png'},{'revision':'1389e1796b7babb4951020cacf401047','url':'assets/images/t_shape.png'},{'revision':'ba9fbfb2924454bc6e531eeb460b3505','url':'assets/images/text_bg.png'},{'revision':'bd9e8166937afd60e98f0535a0764f7b','url':'assets/images/vertical.png'},{'revision':'9742b31b239e384aae7b4b12bc0f2e7a','url':'assets/images/vertical_down_end.png'},{'revision':'ca5a847b2943af216d4b435890aaad64','url':'assets/images/vertical_up_end.png'},{'revision':'28bd43e49fa8e384dc49769dc9411c36','url':'assets/spritesheets/cat.png'},{'revision':'cf0e0cc43b94b68a4581c844c1ce7dd4','url':'assets/spritesheets/flower.png'},{'revision':'c027ec22a21031f2f576c90d8584e94a','url':'assets/spritesheets/monster.png'},{'revision':'8f909d555732bee9928390216fb801d0','url':'assets/spritesheets/mouse.png'},{'revision':'e512060728b65307cade69c5c12172ca','url':'assets/spritesheets/thought.png'},{'revision':'2b3df2bd1386502c8c9b1e6ab11b3d06','url':'assets/tilemaps/floor.png'},{'revision':'b13dfb956f4306a4b5d278d49da3edbe','url':'assets/tilemaps/level1.json'},{'revision':'f4ae8ae1abebdca014a1775b8c0bb7a3','url':'assets/tilemaps/roof.png'},{'revision':'0679cc8b9afb82e918621572db362725','url':'assets/tilemaps/tiles.json'},{'revision':'fd052c1277ee560c921876911b5b66bb','url':'assets/tilemaps/wall.png'},{'revision':'df2e15d0b3a32bfc42627f575e907736','url':'banner.png'},{'revision':'a493ba0aa0b8ec8068d786d7248bb92c','url':'browserconfig.xml'},{'revision':'ce9f1ef1f655d19c7df140fc14453b82','url':'favicon-16x16.png'},{'revision':'120dffe0cce3817caa5a481e04610530','url':'favicon-32x32.png'},{'revision':'0f4013f56368b0ad5e1a2667a2a5ec9c','url':'favicon.ico'},{'revision':'e31fc0e22b7bab152b5e385c59ef33f6','url':'icon.png'},{'revision':'ec13bc00d47b8f9d73bc2c2f61028f5a','url':'icons/android-chrome-144x144.png'},{'revision':'09ae67429046c3035149a92cabfd09a4','url':'index.html'},{'revision':null,'url':'main.782805b954dd8f088cd5.bundle.js'},{'revision':'e3f5ea2df44b3830ea6c891e099f37e7','url':'manifest.json'},{'revision':'583fc265d7979b3568c9c4db209654f5','url':'mstile-150x150.png'},{'revision':'99914b932bd37a50b983c5e7c90ae93b','url':'package.json'},{'revision':'beba087488d3b813470cb3365f0da88b','url':'preview.png'},{'revision':'723d29b047e829f03946228b6ec20614','url':'safari-pinned-tab.svg'},{'revision':'714948ff2440ba7841d04451a7e69d3c','url':'style.css'},{'revision':null,'url':'vendors.0bde9760d7a196ec0310.bundle.js'},{'revision':'fbc1173afdd4de88faa77d1382453c93','url':'vendors.0bde9760d7a196ec0310.bundle.js.LICENSE.txt'}],m().precache(L),function(t){const s=m();!function(t,s,a){let r;if("string"==typeof t){const e=new URL(t,location.href);r=new R((({url:t})=>t.href===e.href),s,a)}else if(t instanceof RegExp)r=new v(t,s,a);else if("function"==typeof t)r=new R(t,s,a);else{if(!(t instanceof R))throw new e("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=t}(b||(b=new C,b.addFetchListener(),b.addCacheListener()),b).registerRoute(r)}(new U(s,t))}(undefined)})()})();